[{"C:\\Users\\admin\\Documents\\CodeActivity\\client\\src\\index.js":"1","C:\\Users\\admin\\Documents\\CodeActivity\\client\\src\\App.js":"2","C:\\Users\\admin\\Documents\\CodeActivity\\client\\src\\reportWebVitals.js":"3","C:\\Users\\admin\\Documents\\CodeActivity\\client\\src\\context\\context.js":"4","C:\\Users\\admin\\Documents\\CodeActivity\\client\\src\\lib\\firebase.prod.js":"5","C:\\Users\\admin\\Documents\\CodeActivity\\client\\src\\Pages\\index.js":"6","C:\\Users\\admin\\Documents\\CodeActivity\\client\\src\\components\\Sidebar\\index.js":"7","C:\\Users\\admin\\Documents\\CodeActivity\\client\\src\\Breakpoints.js":"8","C:\\Users\\admin\\Documents\\CodeActivity\\client\\src\\SeedDatabase.js":"9","C:\\Users\\admin\\Documents\\CodeActivity\\client\\src\\Pages\\signin\\SignIn.js":"10","C:\\Users\\admin\\Documents\\CodeActivity\\client\\src\\Pages\\profile\\Profile.js":"11","C:\\Users\\admin\\Documents\\CodeActivity\\client\\src\\Pages\\today\\Today.js":"12","C:\\Users\\admin\\Documents\\CodeActivity\\client\\src\\Pages\\year\\Year.js":"13","C:\\Users\\admin\\Documents\\CodeActivity\\client\\src\\Pages\\import\\Import.js":"14","C:\\Users\\admin\\Documents\\CodeActivity\\client\\src\\Pages\\week\\Week.js":"15","C:\\Users\\admin\\Documents\\CodeActivity\\client\\src\\components\\Sidebar\\Links\\Links.js":"16","C:\\Users\\admin\\Documents\\CodeActivity\\client\\src\\components\\Sidebar\\Avatar\\Avatar.js":"17","C:\\Users\\admin\\Documents\\CodeActivity\\client\\src\\Pages\\month\\Month.js":"18","C:\\Users\\admin\\Documents\\CodeActivity\\client\\src\\formatData.js":"19","C:\\Users\\admin\\Documents\\CodeActivity\\client\\src\\components\\CodeTime.js":"20","C:\\Users\\admin\\Documents\\CodeActivity\\client\\src\\utils\\functions.js":"21","C:\\Users\\admin\\Documents\\CodeActivity\\client\\src\\Pages\\dataStyles.js":"22","C:\\Users\\admin\\Documents\\CodeActivity\\client\\src\\components\\VerticalBarGraph.js":"23","C:\\Users\\admin\\Documents\\CodeActivity\\client\\src\\components\\Graph.js":"24","C:\\Users\\admin\\Documents\\CodeActivity\\client\\src\\routes.js":"25","C:\\Users\\admin\\Documents\\CodeActivity\\client\\src\\Pages\\ErrorPage\\ErrorPage.js":"26","C:\\Users\\admin\\Documents\\CodeActivity\\client\\src\\Pages\\profile\\ProfileStyles.js":"27","C:\\Users\\admin\\Documents\\CodeActivity\\client\\src\\components\\HorizontalGraph.js":"28","C:\\Users\\admin\\Documents\\CodeActivity\\client\\src\\components\\Progressbar.js":"29","C:\\Users\\admin\\Documents\\CodeActivity\\client\\src\\components\\Navbar\\index.js":"30"},{"size":1131,"mtime":1609736453667,"results":"31","hashOfConfig":"32"},{"size":1706,"mtime":1611327797143,"results":"33","hashOfConfig":"32"},{"size":362,"mtime":499162500000,"results":"34","hashOfConfig":"32"},{"size":1530,"mtime":1611300092033,"results":"35","hashOfConfig":"32"},{"size":549,"mtime":1611304637590,"results":"36","hashOfConfig":"32"},{"size":414,"mtime":1610376527505,"results":"37","hashOfConfig":"32"},{"size":1878,"mtime":1611035714412,"results":"38","hashOfConfig":"32"},{"size":79,"mtime":1610195880746,"results":"39","hashOfConfig":"32"},{"size":422,"mtime":1610369368674,"results":"40","hashOfConfig":"32"},{"size":2630,"mtime":1611727903439,"results":"41","hashOfConfig":"32"},{"size":2542,"mtime":1611722432327,"results":"42","hashOfConfig":"32"},{"size":3695,"mtime":1612242532712,"results":"43","hashOfConfig":"32"},{"size":2942,"mtime":1611323639359,"results":"44","hashOfConfig":"32"},{"size":3033,"mtime":1611384041343,"results":"45","hashOfConfig":"32"},{"size":4235,"mtime":1611068043160,"results":"46","hashOfConfig":"32"},{"size":1212,"mtime":1611327797144,"results":"47","hashOfConfig":"32"},{"size":1210,"mtime":1611723164325,"results":"48","hashOfConfig":"32"},{"size":3349,"mtime":1611068020973,"results":"49","hashOfConfig":"32"},{"size":218,"mtime":1610371045509,"results":"50","hashOfConfig":"32"},{"size":888,"mtime":1611210746462,"results":"51","hashOfConfig":"32"},{"size":1134,"mtime":1611304637590,"results":"52","hashOfConfig":"32"},{"size":2366,"mtime":1611728307709,"results":"53","hashOfConfig":"32"},{"size":2530,"mtime":1612243077458,"results":"54","hashOfConfig":"32"},{"size":534,"mtime":1611728104869,"results":"55","hashOfConfig":"32"},{"size":818,"mtime":1611299949368,"results":"56","hashOfConfig":"32"},{"size":776,"mtime":1611210611911,"results":"57","hashOfConfig":"32"},{"size":1789,"mtime":1611723199708,"results":"58","hashOfConfig":"32"},{"size":2565,"mtime":1612243080213,"results":"59","hashOfConfig":"32"},{"size":2936,"mtime":1611726629559,"results":"60","hashOfConfig":"32"},{"size":1261,"mtime":1611726911392,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"zwu2jw",{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"64"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"64"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"64"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"64"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"64"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"64"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"64"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"64"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"C:\\Users\\admin\\Documents\\CodeActivity\\client\\src\\index.js",[],["131","132"],"C:\\Users\\admin\\Documents\\CodeActivity\\client\\src\\App.js",[],"C:\\Users\\admin\\Documents\\CodeActivity\\client\\src\\reportWebVitals.js",[],"C:\\Users\\admin\\Documents\\CodeActivity\\client\\src\\context\\context.js",["133","134"],"import React, { useEffect, useState } from 'react';\r\nimport firebase from '../lib/firebase.prod';\r\nconst ReactContext = React.createContext({});\r\n\r\nconst ReactProvider = (props) => {\r\n  let userid = localStorage.getItem('userid') || '';\r\n  const [state, setState] = useState({\r\n  });\r\n\r\n  useEffect(() => {\r\n    if(localStorage.getItem('token')) {\r\n      setState(state => state = { ...state, token: localStorage.getItem('token')});\r\n    }\r\n    if (userid && state.token) {\r\n      firebase.firestore().collection('users').doc(userid).set({\r\n        token: state.token\r\n      }, { merge: true })\r\n    }\r\n  }, [state.token]);\r\n\r\n  const GetData = async (target) => {\r\n    let content;\r\n    const ref = firebase.firestore().collection(userid).doc(target);\r\n    await ref.get()\r\n      .then((doc) => {\r\n        if (doc.exists) {\r\n          content = doc.data();\r\n        } else {\r\n          console.log(\"No such document\");\r\n        }\r\n      })\r\n      .catch(err => console.log(err));\r\n    return { [target]: content };\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    if (userid) {\r\n      GetData('user').then(data => setState(state => state = { ...state, user: data.user }))\r\n      GetData('range').then(data => setState(state => state = { ...state, range: data.range }))\r\n      GetData('days').then(data => setState(state => state = { ...state, days: data.days }))\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <ReactContext.Provider value={state}>\r\n      {props.children}\r\n    </ReactContext.Provider>\r\n  )\r\n}\r\n\r\nexport { ReactContext, ReactProvider };","C:\\Users\\admin\\Documents\\CodeActivity\\client\\src\\lib\\firebase.prod.js",["135"],"import Firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/firestore';\r\nimport { seedDatabase } from '../SeedDatabase';\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyDQI_wxv-BeCDQUXVOiQdf1gJWM_obJtqQ\",\r\n  authDomain: \"codestats-23905.firebaseapp.com\",\r\n  projectId: \"codestats-23905\",\r\n  storageBucket: \"codestats-23905.appspot.com\",\r\n  messagingSenderId: \"49046516128\",\r\n  appId: \"1:49046516128:web:0f604a76c5b7f76510b4c5\",\r\n  measurementId: \"G-Z5WJ6Z2LZ8\"\r\n};\r\nconst firebase = Firebase.initializeApp(firebaseConfig);\r\n\r\n// seedDatabase(firebase);\r\n\r\nexport default firebase;","C:\\Users\\admin\\Documents\\CodeActivity\\client\\src\\Pages\\index.js",[],"C:\\Users\\admin\\Documents\\CodeActivity\\client\\src\\components\\Sidebar\\index.js",[],"C:\\Users\\admin\\Documents\\CodeActivity\\client\\src\\Breakpoints.js",[],"C:\\Users\\admin\\Documents\\CodeActivity\\client\\src\\SeedDatabase.js",["136"],"import { formatData } from './formatData';\r\n// // import seed from './wakatime-mydata.json';\r\n\r\n\r\n// export function seedDatabase (firebase) {\r\n//   const data = formatData(seed);\r\n//   localStorage.setItem('userid', data.user.id);\r\n//   firebase.firestore().collection(data.user.id).doc('user').set(data.user);\r\n//   firebase.firestore().collection(data.user.id).doc('range').set(data.range);\r\n//   firebase.firestore().collection(data.user.id).doc('days').set({days: data.days});\r\n// }","C:\\Users\\admin\\Documents\\CodeActivity\\client\\src\\Pages\\signin\\SignIn.js",["137","138"],"import React, { useEffect } from 'react'\r\nimport styled from 'styled-components'\r\nimport { useHistory } from 'react-router-dom';\r\nimport firebase from '../../lib/firebase.prod';\r\nimport { breakpoints } from '../../Breakpoints';\r\n\r\nconst SignIn = () => {\r\n  const history = useHistory();\r\n  let localURL = process.env.REACT_APP_SERVER_DEV;\r\n  if(window.location.hostname != 'localhost') {\r\n    localURL = process.env.REACT_APP_SERVER_PROD;\r\n  }\r\n\r\n  const params = new URLSearchParams(window.location.search);\r\n  useEffect(() => {\r\n    if (params.has('token')) {\r\n      console.log(params.get('token'));\r\n      let token = params.get('token');\r\n      localStorage.setItem('token', token);\r\n      history.push('/import');\r\n    }\r\n  }, [])\r\n\r\n  function BetaSignin() {\r\n    let userid = 'dcba6617-3d13-4b5e-80a1-3969c2b157dd';\r\n    firebase.firestore().collection('users').doc(userid).get()\r\n      .then((doc) => {\r\n        if (doc.exists) {\r\n          console.log(doc.data().token);\r\n          let token = doc.data().token;\r\n          localStorage.setItem('token', token);\r\n          localStorage.setItem('userid', userid);\r\n          window.location.reload();\r\n        }\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <BoldText>CodeStats</BoldText>\r\n      <Text onClick={() => { params.set('namedas', 1); params.toString(); }}>Signin into your wakatime account</Text>\r\n      <Button>\r\n        <Link href={`${localURL}/auth`}>Signin with wakatime</Link>\r\n      </Button>\r\n      <Text>For testing Purposes</Text>\r\n      <Button onClick={() => BetaSignin()}>\r\n        Beta Signin\r\n      </Button>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport const Container = styled.div`\r\ndisplay: flex;\r\nflex-direction: column;\r\njustify-content: center;\r\nalign-items: center;\r\nwidth: 100vw;\r\nheight: 100vh;\r\n`;\r\n\r\nexport const BoldText = styled.h1`\r\n  font-size: 84px;\r\n  font-weight: 700;\r\n  color: #001A33;\r\n  margin-bottom: 10px;\r\n  margin-top: -100px;\r\n  @media only screen and (max-width: ${breakpoints.md}) {\r\n    font-size: 48px;\r\n  }\r\n\r\n  `;\r\n\r\nexport const Text = styled.h3`\r\n  font-size: 16px;\r\n  color: rgba(0, 0, 0, 0.5);\r\n  margin-bottom: 20px;\r\n  font-weight: 500;\r\n`;\r\n\r\n\r\nexport const Button = styled.button`\r\n  padding: 10px 20px;\r\n  border: none;\r\n  border-radius: 5px;\r\n  background: #7AD930;\r\n  font-size: 16px;\r\n  font-weight: 600;\r\n  color: #001A33;\r\n  margin-bottom: 50px;\r\n  cursor: pointer;\r\n  border: 1px solid rgba(0,0,0,0.5);\r\n  &:hover {\r\n    background: #5CA91E;\r\n  }\r\n`;\r\n\r\nexport const Link = styled.a`\r\n  text-decoration: none;\r\n  color: inherit;\r\n`;\r\n\r\nexport default SignIn\r\n","C:\\Users\\admin\\Documents\\CodeActivity\\client\\src\\Pages\\profile\\Profile.js",["139"],"import React, { useContext, useEffect, useState } from 'react'\r\nimport { ReactContext } from '../../context/context';\r\nimport { Container, Row, Pane, Image, LText, MText, SText, Grid, Loading, Gif, Button } from './ProfileStyles';\r\nimport { format_toReadable_time } from '../../utils/functions';\r\nimport CodeTime from '../../components/CodeTime';\r\nimport { Redirect } from 'react-router';\r\nimport LoadingGif from '../../loading.gif';\r\n\r\nconst Profile = () => {\r\n  const state = useContext(ReactContext);\r\n  const [user, setuser] = useState();\r\n  const [all_time, setAll_time] = useState();\r\n\r\n  useEffect(() => {\r\n    let localURL = process.env.REACT_APP_SERVER_DEV;\r\n    if(window.location.hostname != 'localhost') {\r\n      localURL = process.env.REACT_APP_SERVER_PROD;\r\n    }\r\n\r\n    fetch(`${localURL}/api/user/all_time_since_today`, {\r\n      method: 'GET',\r\n      headers: { 'token': state.token }\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        setAll_time(data.data);\r\n      })\r\n      .catch(err => console.log(err));\r\n\r\n\r\n    if (state)\r\n      setuser(state.user);\r\n\r\n  }, [state]);\r\n\r\n  function calculate_alltime_dailyAverage() {\r\n    let start = new Date(user.created_at).getTime();\r\n    let today = new Date().getTime();\r\n    let total_hours = all_time.total_seconds / 3600;\r\n    let number_ofdays = (today - start) / 86400000;\r\n    let average = total_hours / number_ofdays;\r\n    return format_toReadable_time(average);\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      {!localStorage.getItem('userid') && <Redirect to=\"/import\" />}\r\n      {user && all_time ?\r\n        <>\r\n          <Row>\r\n            <Image src={user.photo} />\r\n            <Pane>\r\n              <LText>{user.display_name}</LText>\r\n              <MText>@{user.username}</MText>\r\n              <SText>Joined <i>{new Date(user.created_at).toDateString().split(\" \").slice(1,).join(\" \")}</i></SText>\r\n            </Pane>\r\n          </Row>\r\n          <Grid>\r\n            <CodeTime type=\"All Time\" time={all_time.text} />\r\n            <CodeTime type=\"Daily Average\" time={calculate_alltime_dailyAverage()} />\r\n          </Grid>\r\n            <Pane>\r\n              <SText>Import data</SText>\r\n              <Button onClick={() => {\r\n                localStorage.removeItem('userid');\r\n                window.location.reload();\r\n              }}>Import Data</Button>\r\n            </Pane>\r\n        </>\r\n        :\r\n        <Loading>\r\n          <Gif src={LoadingGif} />\r\n        </Loading>\r\n\r\n      }\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Profile\r\n","C:\\Users\\admin\\Documents\\CodeActivity\\client\\src\\Pages\\today\\Today.js",["140","141"],"C:\\Users\\admin\\Documents\\CodeActivity\\client\\src\\Pages\\year\\Year.js",[],"C:\\Users\\admin\\Documents\\CodeActivity\\client\\src\\Pages\\import\\Import.js",["142"],"import React, { useContext, useState } from 'react'\r\nimport { Redirect } from 'react-router';\r\nimport styled from 'styled-components'\r\nimport { ReactContext } from '../../context/context';\r\nimport firebase from '../../lib/firebase.prod';\r\nimport { seedDatabase } from '../../SeedDatabase';\r\nimport { breakpoints } from '../../Breakpoints';\r\n\r\n\r\nconst Import = () => {\r\n  const { token } = useContext(ReactContext);\r\n  const [message, setMessage] = useState('asd');\r\n\r\n  let localURL = process.env.REACT_APP_SERVER_DEV;\r\n  if (window.location.hostname != 'localhost') {\r\n    localURL = process.env.REACT_APP_SERVER_PROD;\r\n  }\r\n\r\n  function get_data_dumps() {\r\n    fetch(`${localURL}/api/user/data_dumps`, {\r\n      method: 'GET',\r\n      headers: { 'token': token }\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        if (data.message) {\r\n          setMessage(data.message);\r\n          return;\r\n        }\r\n        console.log(data);\r\n        localStorage.setItem('userid', data.user.id);\r\n        seedDatabase(firebase, data);\r\n      })\r\n      .catch(err => console.log(err));\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      {localStorage.getItem('userid') && <Redirect to=\"/\" />}\r\n      <BoldText>CodeStats</BoldText>\r\n      <>\r\n        <Text>To view your data you need to import it first.</Text>\r\n        <Button>\r\n          <Link onClick={() => get_data_dumps()}>Import Data</Link>\r\n        </Button>\r\n        {message &&\r\n          <Message>\r\n            <Info>\r\n              Sorry, somthing went wrong.\r\n              <br></br>\r\n              <br></br>\r\n              Please go to your wakatime account \r\n              <b> -Settings</b><b>-Account. </b> Under Export, Click <b>export my coding activity</b> And try again.\r\n          </Info>\r\n          </Message>\r\n        }\r\n      </>\r\n    </Container>\r\n\r\n  )\r\n}\r\n\r\n\r\nexport const Container = styled.div`\r\ndisplay: flex;\r\nflex-direction: column;\r\njustify-content: center;\r\nalign-items: center;\r\nwidth: 100vw;\r\nheight: 100vh;\r\n`;\r\n\r\nexport const BoldText = styled.h1`\r\n  font-size: 84px;\r\n  font-weight: 700;\r\n  color: #001A33;\r\n  margin-bottom: 10px;\r\n  margin-top: -100px;\r\n  @media only screen and (max-width: ${breakpoints.md}) {\r\n    font-size: 48px;\r\n  }\r\n  `;\r\n\r\nexport const Text = styled.h3`\r\n  font-size: 16px;\r\n  color: rgba(0, 0, 0, 0.5);\r\n  margin-bottom: 20px;\r\n  font-weight: 500;\r\n`;\r\n\r\n\r\nexport const Button = styled.button`\r\n  padding: 10px 20px;\r\n  border: none;\r\n  border-radius: 5px;\r\n  background: #7AD930;\r\n  cursor: pointer;\r\n  border: 1px solid rgba(0,0,0,0.5);\r\n  &:hover {\r\n    background: #5CA91E;\r\n  }\r\n`;\r\n\r\nexport const Link = styled.a`\r\n  font-size: 18px;\r\n  text-decoration: none;\r\n  font-weight: 500;\r\n  color: #001A33;\r\n`;\r\n\r\nexport const Message = styled.div`\r\n  width: 75%;\r\n  border: 1px solid rgba(0,0,0,0.5);\r\n  background: #F0F7FF;\r\n  padding: 30px;\r\n  border-radius: 5px;\r\n  margin-top: 30px;\r\n`;\r\n\r\nexport const Info = styled.p`\r\n  font-size: 16px;\r\n  font-weight: 400;\r\n  color: #001A33;\r\n`;\r\n\r\nexport default Import\r\n","C:\\Users\\admin\\Documents\\CodeActivity\\client\\src\\Pages\\week\\Week.js",[],"C:\\Users\\admin\\Documents\\CodeActivity\\client\\src\\components\\Sidebar\\Links\\Links.js",[],"C:\\Users\\admin\\Documents\\CodeActivity\\client\\src\\components\\Sidebar\\Avatar\\Avatar.js",[],"C:\\Users\\admin\\Documents\\CodeActivity\\client\\src\\Pages\\month\\Month.js",[],"C:\\Users\\admin\\Documents\\CodeActivity\\client\\src\\formatData.js",[],"C:\\Users\\admin\\Documents\\CodeActivity\\client\\src\\components\\CodeTime.js",[],"C:\\Users\\admin\\Documents\\CodeActivity\\client\\src\\utils\\functions.js",["143"],"// format to Jan 12\r\nexport function format_date_toMonth(date) {\r\n  return (\r\n    new Date(date).toDateString().split(\" \").slice(1).slice(0, 2).join().replace(',', ' ')\r\n  )\r\n}\r\n\r\n// format to 2hrs 12min\r\nexport function format_toReadable_time(data) {\r\n  let secs = data * 3600;\r\n  let hrs;\r\n  let mins;\r\n  hrs = Math.floor(secs / 3600);\r\n  mins = Math.floor((secs - hrs * 3600) / 60);\r\n  return `${hrs}hrs ${mins}min`\r\n}\r\n\r\n\r\nexport function get_total_time(days) {\r\n  let total_seconds = 0;\r\n    days.map((item) => {\r\n      if(item.grand_total.total_seconds)\r\n        total_seconds +=  item.grand_total.total_seconds\r\n  });\r\n  let hrs;\r\n  let mins;\r\n  hrs = Math.floor(total_seconds / 3600);\r\n  mins = Math.floor((total_seconds - hrs * 3600) / 60);\r\n  return `${hrs}hrs ${mins}min`\r\n}\r\n\r\n// format to 2020-01-01\r\nexport function formatDate(date) {\r\n  var d = new Date(date),\r\n    month = '' + (d.getMonth() + 1),\r\n    day = '' + d.getDate(),\r\n    year = d.getFullYear();\r\n  if (month.length < 2)\r\n    month = '0' + month;\r\n  if (day.length < 2)\r\n    day = '0' + day;\r\n  return [year, month, day].join('-');\r\n}\r\n\r\n","C:\\Users\\admin\\Documents\\CodeActivity\\client\\src\\Pages\\dataStyles.js",[],"C:\\Users\\admin\\Documents\\CodeActivity\\client\\src\\components\\VerticalBarGraph.js",[],"C:\\Users\\admin\\Documents\\CodeActivity\\client\\src\\components\\Graph.js",[],"C:\\Users\\admin\\Documents\\CodeActivity\\client\\src\\routes.js",[],"C:\\Users\\admin\\Documents\\CodeActivity\\client\\src\\Pages\\ErrorPage\\ErrorPage.js",[],"C:\\Users\\admin\\Documents\\CodeActivity\\client\\src\\Pages\\profile\\ProfileStyles.js",[],"C:\\Users\\admin\\Documents\\CodeActivity\\client\\src\\components\\HorizontalGraph.js",[],"C:\\Users\\admin\\Documents\\CodeActivity\\client\\src\\components\\Progressbar.js",["144","145"],"import React, { useContext, useEffect, useState } from 'react'\r\nimport styled from 'styled-components';\r\nimport { breakpoints } from '../Breakpoints';\r\nimport { ReactContext } from '../context/context';\r\nimport { format_toReadable_time } from '../utils/functions';\r\nimport { Doughnut } from 'react-chartjs-2';\r\n\r\n\r\nconst Progressbar = ({ today }) => {\r\n  const [all_time, setAll_time] = useState();\r\n  const state = useContext(ReactContext);\r\n\r\n  useEffect(() => {\r\n    let localURL = process.env.REACT_APP_SERVER_DEV;\r\n    if(window.location.hostname != 'localhost') {\r\n      localURL = process.env.REACT_APP_SERVER_PROD;\r\n    }\r\n\r\n    // All time since Today\r\n    fetch(`${localURL}/api/user/all_time_since_today`, {\r\n      method: 'GET',\r\n      headers: { 'token': state.token }\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        setAll_time(data.data);\r\n      })\r\n      .catch(err => console.log(err));\r\n  }, []);\r\n\r\n  function calculate_alltime_dailyAverage() {\r\n    let start_time = new Date(state.user.created_at).getTime();\r\n    let today_time = new Date().getTime();\r\n    let total_hours = all_time.total_seconds / 3600;\r\n    let number_ofdays = (today_time - start_time) / 86400000;\r\n    let average = total_hours / number_ofdays;\r\n    return average;\r\n  }\r\n\r\n  let data;\r\n  let options;\r\n  let percentage;\r\n\r\n  if (all_time) {\r\n    let today_inHour = today.grand_total.total_seconds / 3600;\r\n    let average_inHour = calculate_alltime_dailyAverage();\r\n    percentage = ((today_inHour / average_inHour).toFixed(2) * 100);\r\n    if (percentage >= 100) {\r\n      percentage = 100;\r\n    }\r\n    // Normalize to 0 - 2 scale\r\n    let min = 0;\r\n    let max = 100;\r\n    let startScale = 0;\r\n    let endScale = 2;\r\n\r\n    let x = startScale + (percentage - 0) * (endScale - startScale) / (max - min);\r\n\r\n    data = {\r\n      labels: [''],\r\n      datasets: [{\r\n        data: [percentage],\r\n        backgroundColor: 'green',\r\n      }],\r\n    };\r\n\r\n    options = {\r\n      cutoutPercentage: 75,\r\n      rotation: 1 * Math.PI,\r\n      circumference: x * Math.PI,\r\n      legend: {\r\n        display: false\r\n      },\r\n    }\r\n\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <Container>\r\n      {all_time &&\r\n        <>\r\n          <Text>Daily Average: {format_toReadable_time(calculate_alltime_dailyAverage())}</Text>\r\n          <Doughnut data={data} options={options} />\r\n          <Text>{percentage}%</Text>\r\n        </>\r\n      }\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport const Container = styled.div`\r\ndisplay: inline-flex;\r\ncolor: #001A33;\r\njustify-content: center;\r\nalign-items: center;\r\nflex-direction: column;  \r\n\r\n  @media (max-width:${breakpoints.md}) {\r\n  }\r\n`;\r\n\r\nexport const Text = styled.h1`\r\nfont-weight: bold;\r\nfont-size: 18px;\r\ncolor: #001A33;\r\nmargin-bottom: 20px;\r\n`;\r\n\r\nexport const ProgressText = styled.h1`\r\nfont-weight: bold;\r\nfont-size: 24px;\r\ncolor: #001A33;\r\nposition: relative;\r\ntop: 35%;\r\n\r\n`;\r\n\r\nexport default Progressbar\r\n","C:\\Users\\admin\\Documents\\CodeActivity\\client\\src\\components\\Navbar\\index.js",[],{"ruleId":"146","replacedBy":"147"},{"ruleId":"148","replacedBy":"149"},{"ruleId":"150","severity":1,"message":"151","line":19,"column":6,"nodeType":"152","endLine":19,"endColumn":19,"suggestions":"153"},{"ruleId":"150","severity":1,"message":"154","line":43,"column":6,"nodeType":"152","endLine":43,"endColumn":8,"suggestions":"155"},{"ruleId":"156","severity":1,"message":"157","line":4,"column":10,"nodeType":"158","messageId":"159","endLine":4,"endColumn":22},{"ruleId":"156","severity":1,"message":"160","line":1,"column":10,"nodeType":"158","messageId":"159","endLine":1,"endColumn":20},{"ruleId":"161","severity":1,"message":"162","line":10,"column":31,"nodeType":"163","messageId":"164","endLine":10,"endColumn":33},{"ruleId":"150","severity":1,"message":"165","line":22,"column":6,"nodeType":"152","endLine":22,"endColumn":8,"suggestions":"166"},{"ruleId":"161","severity":1,"message":"162","line":16,"column":33,"nodeType":"163","messageId":"164","endLine":16,"endColumn":35},{"ruleId":"161","severity":1,"message":"162","line":18,"column":32,"nodeType":"163","messageId":"164","endLine":18,"endColumn":34},{"ruleId":"150","severity":1,"message":"167","line":37,"column":6,"nodeType":"152","endLine":37,"endColumn":8,"suggestions":"168"},{"ruleId":"161","severity":1,"message":"162","line":15,"column":32,"nodeType":"163","messageId":"164","endLine":15,"endColumn":34},{"ruleId":"169","severity":1,"message":"170","line":21,"column":21,"nodeType":"171","messageId":"172","endLine":21,"endColumn":23},{"ruleId":"161","severity":1,"message":"162","line":15,"column":33,"nodeType":"163","messageId":"164","endLine":15,"endColumn":35},{"ruleId":"150","severity":1,"message":"173","line":29,"column":6,"nodeType":"152","endLine":29,"endColumn":8,"suggestions":"174"},"no-native-reassign",["175"],"no-negated-in-lhs",["176"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'userid'. Either include it or remove the dependency array.","ArrayExpression",["177"],"React Hook useEffect has missing dependencies: 'GetData' and 'userid'. Either include them or remove the dependency array.",["178"],"no-unused-vars","'seedDatabase' is defined but never used.","Identifier","unusedVar","'formatData' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'history' and 'params'. Either include them or remove the dependency array.",["179"],"React Hook useEffect has missing dependencies: 'localURL' and 'state.token'. Either include them or remove the dependency array.",["180"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has a missing dependency: 'state.token'. Either include it or remove the dependency array.",["181"],"no-global-assign","no-unsafe-negation",{"desc":"182","fix":"183"},{"desc":"184","fix":"185"},{"desc":"186","fix":"187"},{"desc":"188","fix":"189"},{"desc":"190","fix":"191"},"Update the dependencies array to be: [state.token, userid]",{"range":"192","text":"193"},"Update the dependencies array to be: [GetData, userid]",{"range":"194","text":"195"},"Update the dependencies array to be: [history, params]",{"range":"196","text":"197"},"Update the dependencies array to be: [localURL, state.token]",{"range":"198","text":"199"},"Update the dependencies array to be: [state.token]",{"range":"200","text":"201"},[608,621],"[state.token, userid]",[1364,1366],"[GetData, userid]",[733,735],"[history, params]",[1354,1356],"[localURL, state.token]",[938,940],"[state.token]"]